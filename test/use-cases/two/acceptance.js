const stripLastLine = require('../../helpers/stripLastLine');
const { two: parseDocument } = require('../../../src/bankOcr');
const test = require('tape');
const { exec } = require('child_process');
const { compose, slice } = require('ramda');

const NUMBER_OF_TEST_ENTRIES = 1;

const validAccountNumber = '345882865';
const invalidAccountNumber = '575326790';

const writeTestData = (cb) =>
	exec(
		`node bin/write-test-data.js two ${NUMBER_OF_TEST_ENTRIES} ${validAccountNumber},${invalidAccountNumber}`,
		(error) => {
		if (error) {
			console.error(`exec error: ${error}`);
			return;
		}

		cb();
	}
);

test('Use case two - parses the document and returns the account numbers with info about whether or not they are valid', (t) => {
	t.plan(4);
	writeTestData(() =>
		parseDocument(`${__dirname}/../../data/use-case-two/autogenerated-test-document.txt`,
		[validAccountNumber, invalidAccountNumber],
		(result) => {
			t.equal(result[1].value, validAccountNumber, "assigns parsed number to 'value' as in use case one");
			t.equal(result[2].value, invalidAccountNumber);
			t.equal(result[1].valid, true, "assigns the 'valid' property based upon whether the checksum is valid");
			t.equal(result[2].valid, false);
		})
	)
});
